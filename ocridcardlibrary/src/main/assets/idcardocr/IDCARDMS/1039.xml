<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE IDCARD SYSTEM "IDCARD.dtd">
<IDCARD>
  <CIDCardTemplate nMainDocumentID="1039" chDocumentName="厦门市社会保障卡-照片页" engDocumentName="China Xiamen Social Security Card Portrait Page" imageSizeType="2">
	<vecAutoProcess>
	    <vecProcessMode nMode="0"> 
            <CAutoProcess processType="25">
			  <PerspectiveTransformEx nType="99" nWidth="896" nHeight="569"/> 
			</CAutoProcess>			
		</vecProcessMode>
        <vecProcessMode nMode="1"> 
			<!--CAutoProcess processType="23">
			  <CIDCardAutoProcessEx2 nCropType="4" nMaxAngle="0.3" nMinAngle="0.017" nFilledType="1" bIs180Rotate="0" bIsValid="0"  bSameSize="1"/> 
			</CAutoProcess-->  
			<CAutoProcess processType="24">
			  <PerspectiveTransform nType="3" bIs180Rotate="1" bIsValid="1" nWidth="896" nHeight="569"/> 
			</CAutoProcess>  
		</vecProcessMode>
    </vecAutoProcess>
    <vecProcessImage>
      <CProcessImage processType="3">
        <CEraseBlackBorderEx>
          <!--processRect要检测黑边的区域-->
          <RECT Left="0" Top="0" Right="10000" Bottom="10000" />
          <!--unProcessRect在要检测的区域里，能够确定的不需要检测黑边的部分，
					也就是说这个区域肯定没有黑边存在，用来提高检测效率 -->
					
          <RECT Left="2000" Top="2000" Right="8900" Bottom="8000" />
        </CEraseBlackBorderEx>
      </CProcessImage>
      <!--<CProcessImage processType="6">
				<CBlurAverage nType="1"/>
			</CProcessImage>-->
    </vecProcessImage>  
    <vecRegion>
      <!--CRegion:区域信息
				nIndex:区域编号
				nRegionType:区域类型,0代表头像区域,1代表识别区域
				nProcessOrder:该区域被处理的顺序
				rcPosition 坐标均为占整张图像的百分比*10000
			-->
		
		<!-- 头像区域定义 左 下 区域基准点 编号 1 2-->
      <CRegion nIndex="0" nRegionType="0" nProcessOrder="0">
      
       
        <!--处理该区域需要的图像信息的光的类型-->
        <vecImageLightType>
          <!--1:可见光图;2:红外光图;4:紫外光图 -->
          <LIGHTTYPE>1</LIGHTTYPE>
          <LIGHTTYPE>2</LIGHTTYPE>
        </vecImageLightType>
        
        
        <!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->   
        <!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
        <CLocateRegion bAccurateLocate="1">
          <!--在定位前进行的预处理信息，一般是二值化-->
          <vecProcessImage>
            <CProcessImage processType="1">
              <CTrueColorToGrayEx nFilter="0">
                <RECT Top="0" Right="0" Bottom="0" Left="0" />
              </CTrueColorToGrayEx>
            </CProcessImage>
          </vecProcessImage>
          
          <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
                            
         <RECT Left="7254" Top="700" Right="9592" Bottom=" 4855" />
          <vecAnchorLocateInfo>
            <!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
           <!-- <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7031" anchorType="1" />-->
            
               <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6500" anchorType="1" />
               
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="9785" anchorType="2" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="400" anchorType="3" />
            
           <!-- <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="5313" anchorType="4" />            -->
              <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6000" anchorType="4" /> <!--2016.10.9修改-->
              
          </vecAnchorLocateInfo>
          
          
          
          <!--该区域定义的区域类型基准点的信息-->  
		    <!--最后 vecAnchor 中有 0-9基准点（含区域 行 关键字基准点的汇总）--> 
		
          <vecCLocateAnchor>
            <CLocateAnchor nDisToAnchor="0" nAnchorIndex="1" anchorType="1" />
            <CLocateAnchor nDisToAnchor="0" nAnchorIndex="2" anchorType="4" />
          </vecCLocateAnchor>
          
        </CLocateRegion>
        <!--区域内定位行的信息-->
      </CRegion>
      
      
      
      
      <!--   公民身份号码行定义上基准  公民身份号码关键字定义右基准 编号 3 4  在最后的vecAnchor中有汇总
	  
	            CRegion:区域信息
				nIndex:区域编号
				nRegionType:区域类型,0代表头像区域,1代表识别区域
				nProcessOrder:该区域被处理的顺序

				rcPosition 坐标均为占整张图像的百分比*10000
			-->
				

      <CRegion nIndex="1" nRegionType="1" nProcessOrder="1">     <!--//保险号和身份证区域 -->
      
      
        <!--处理该区域需要的图像信息的光的类型-->
        <vecImageLightType>
          <!--1:可见光图;2:红外光图;4:紫外光图 -->
          <LIGHTTYPE>2</LIGHTTYPE>
          <LIGHTTYPE>1</LIGHTTYPE>
        </vecImageLightType>
        
        
        <!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
        <!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
        <CLocateRegion bAccurateLocate="0">       <!-- //定位区域的信息  class CLocateRegion-->      
         
          <vecProcessImage></vecProcessImage>
          <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
          <RECT Left="2892" Top="6189" Right="8050" Bottom="8000" />
          
          <vecAnchorLocateInfo>    
            
            <!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
            <CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="-4723" anchorType="1" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2677" anchorType="1" />
            
          <!--   <CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="150" anchorType="2" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="8277" anchorType="2" />-->
            
             <CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="900" anchorType="2" /> <!-- 16.10.9修改-->
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="9100" anchorType="2" />
           
            <CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="800" anchorType="3" />              
             <!--//相对头像区域定义的2基准点（下边界） 下移50 2基准点可用 就不用下面0基准点（左上角）定义的上边界-->
             
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="5988" anchorType="3" />
            
           <!-- <CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="3000" anchorType="4" />  
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="8205" anchorType="4" />-->
            
             <CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="3500" anchorType="4" />  
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="8705" anchorType="4" />
            
          </vecAnchorLocateInfo>
          <!--该区域定义的区域类型基准点的信息-->
          <vecCLocateAnchor></vecCLocateAnchor>
        </CLocateRegion>
        
        
        <!--  //定位行-->
        <CLocateLine>      <!--  //	区域定位行的信息   class CLocateLine-->

        
        <!--  //截取部分区域-->
          <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          
          <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="2" Top="0" Right="90" Bottom="98" />
          
          <!--nLocateMethod:定位行时，0灰度变化的方式进行行定位;1投影方式进行行定位-->
          
          <!--bHeight:是否等高-->
          <!--bSpace:是否等间距-->
          <!--bWidth:是否等宽-->
          
          <!--nMinElementNum:该行最少元素数-->
          <!--nMaxElementNum:该行最多元素数-->
          
          <!--nMinWidth:元素的最小宽度-->
          <!--nMaxWidth:元素的最大宽度-->
          <!--nMinHeight:元素的最小高度-->
          <!--nMaxHeight:元素的最大高度-->
          
          <!--nMinSpace:元素间的最小间距-->
          <!--nMaxSpace:元素间的最大间距-->
          
          <!--行的信息？？？-->
          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="2" nMinWidth="2000" nMaxWidth="4500" nMinHeight="300" nMaxHeight="850" nMinSpace="100" nMaxSpace="600" bPostProcess="0">
          
           <!--后处理-->  <!--	//在定位行时：0,灰度变化的方式;1投影方式-->	
            <vecCLocateMethod>                
            
              <CLocateMethod nLocateMethod="0">     
               <!--	//在定位行时：0,灰度变化的方式;-->
               	
                <!--在定位前进行的预处理信息，一般是二值化-->
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              
                <!--//在定位行时：1投影方式;-->
              <CLocateMethod nLocateMethod="1">             
                 <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="7" />
                        <BINARYPARAM nBlockNum="1" nMethod="6" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              
            </vecCLocateMethod>
          </CLocateInfo>
          
          
           <!--  //边界的扩展和压缩 正负是相对于坐标轴的方向-->
          <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
          <positionPlus nLeftPlus="-120" nRightPlus="120" nTopPlus="-120" nBottomPlus="150" />
        </CLocateLine>
        
         
          <!--  //行内字符识别单元的定位识别-->
        <vecLine>
          <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
          <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
          <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
          <!--nLineType:0代表不需要识别，1代表需要识别-->
          
          <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">    <!--//保险号行-->	
          
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->						
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            
            <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="\S{3}\D{17}[\DX]" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
         
             
              <!--nLocateMethod:  0,用识别核心做定位;
								  1，提取连通域的方法进行定位;
								  2，投影方法进行定位
						-->
              <!--bHeight:是否等高-->
              <!--bSpace:是否等间距-->
              <!--bWidth:是否等宽-->
              
              <!--nMinElementNum:该行最少元素数-->
              <!--nMaxElementNum:该行最多元素数-->
              
              <!--nMinWidth:元素的最小宽度-->
              <!--nMaxWidth:元素的最大宽度-->
              <!--nMinHeight:元素的最小高度-->
              <!--nMaxHeight:元素的最大高度-->
              
              <!--nMinSpace:元素间的最小间距-->  
              <!--nMaxSpace:元素间的最大间距-->  

              <!--定位字符时需要的信息 class CLocateInfo--> 
              <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="140" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="-1" nMinWidth="60" nMaxWidth="500" nMinHeight="300" nMaxHeight="1000" nMinSpace="40" nMaxSpace="600" bPostProcess="1">
                
                
                 <!--nLocateMethod: //在定位字符时：0，用识别核心做定位，1，提取连通域的方法进行定位2，投影方法进行定位		-->
                <vecCLocateMethod>
                  <CLocateMethod nLocateMethod="1">
                    <vecProcessImage>
                      <CProcessImage processType="1">
                        <CTrueColorToGrayEx nFilter="0">
                          <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                        </CTrueColorToGrayEx>
                      </CProcessImage>
                      <CProcessImage processType="2">
                        <CGrayToBinaryEx>
                          <vecBinaryParam>
                            <BINARYPARAM nBlockNum="1" nMethod="7" />
                            <BINARYPARAM nBlockNum="1" nMethod="6" />
                          </vecBinaryParam>
                          <!--processRect-->
                          <RECT Left="0" Top="0" Right="0" Bottom="0" />
                        </CGrayToBinaryEx>
                      </CProcessImage>
                    </vecProcessImage>
                  </CLocateMethod>
                  
                  <CLocateMethod nLocateMethod="1">
                    <vecProcessImage>
                      <CProcessImage processType="1">
                        <CTrueColorToGrayEx nFilter="0">
                          <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                        </CTrueColorToGrayEx>
                      </CProcessImage>
                      <CProcessImage processType="2">
                        <CGrayToBinaryEx>
                          <vecBinaryParam>
                            <BINARYPARAM nBlockNum="1" nMethod="7" />
                            <BINARYPARAM nBlockNum="1" nMethod="3" />
                          </vecBinaryParam>
                          <!--processRect-->
                          <RECT Left="0" Top="0" Right="0" Bottom="0" />
                        </CGrayToBinaryEx>
                      </CProcessImage>
                    </vecProcessImage>
                  </CLocateMethod>
                </vecCLocateMethod>
              </CLocateInfo>
         
              <vecKernal>
                <!--nRecogType:0识别区域，1识别字符-->
                <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="1" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                 <!--//识别灰度图像中的字符？？？-->
                
                 <!--// CHARTYPE{AllCHAR=0,CHCHAR=1,DIGITCHAR=2,UPPERCHAR=3,LOWCHAR=4,SPECIALCHAR=10};-->         
                  <vecCharRatio>        
                    <CCharRatio strChars="" charType="1" nWHRatio="100" />    <!--//字母？？？-->
                    <CCharRatio strChars="" charType="2" nWHRatio="62" />      <!--//数字？？？-->
                  </vecCharRatio>
                  
                </CKernalInfo>
              </vecKernal>
            </CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
            <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
            <!--cellRecogType:识别内容
								NAMECH=0,//中文姓名
								SEX=1,//性别
								NATION=2,//民族
								BIRTHDAY=3,//出生日期
								ISSUINGDATE=4,//签发日期
								VALIDPERIOD=5,//有效期至
								ADDRESSS=6,//地址
								IDNUMBER=7,//身份证号码
								PPMRZ1=8,//护照类型证件的机读码第一行
								PPMRZ2=9,//护照类型证件的机读码第二行
								OTHER=10//其他类型
						-->
            <!--charOrder:字符的排列情况，用正则表达式表示-->
            <!--kernalMainType识别核心主类型 
								THOCR=1,
								SSFT152=2,
								BARCODE=3
						-->
						
				
            <!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值 OutputThreshold的个数最大不能超过该值，否则将不输出-->
              
              <CRecogUnit nIndex="4" bLocate="1" bRecog="1">  <!--该识别单元需要定位和重新识别-->
                <CLocateRecogUnit bStart="0" nStartIndexInChar="-1" bEnd="1" nEndIndexInChar="0">
                                
                  <!-- //  用下面定义的关键字基准点（证 等字的右边界 定义识别单元左边界 4可用就不用0基准点） -->
                  <vecAnchorLocateInfo>
                    <CAnchorLocateInfo nDisToAnchor="0" nAnchorIndex="4" anchorType="1" />  
                  <!--  <CAnchorLocateInfo nDisToAnchor="4400" nAnchorIndex="0" anchorType="1" />-->
                    <CAnchorLocateInfo nDisToAnchor="4200" nAnchorIndex="0" anchorType="1" />
                  </vecAnchorLocateInfo>
                  
                </CLocateRecogUnit>
            
                <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="\D{17}[\DX]" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                
               <!--   <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="18" nMaxElementNum="18" nMinWidth="60" nMaxWidth="380" nMinHeight="400" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1">-->
                  
                                    <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="-1" nMinWidth="10" nMaxWidth="250" nMinHeight="400" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1">
                  
                  
                  <!--//在定位字符时：0，用识别核心做定位，1，提取连通域的方法进行定位2，投影方法进行定位-->
                    <vecCLocateMethod>   <!--//processType="2" 中nMethod的取值不同  依次是 7 3 ；7 6 ；7 5-->
                    
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                      
                      <CLocateMethod nLocateMethod="1">                      
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="6" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="5" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                    </vecCLocateMethod>
                  </CLocateInfo>
                  
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
 
                    <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="3" charType="10" nWHRatio="78" />
                        <CCharRatio strChars="" charType="2" nWHRatio="78" />
                        <CCharRatio strChars="1" charType="10" nWHRatio="53" />
                        <CCharRatio strChars="X" charType="10" nWHRatio="78" />                       
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
<!--<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="\D{17}[\DX]" bConfirmParams="0">-->
                
                </CRecogUnit>
            </vecRecogUnit>
            
            
            <!--vecLineKeyWord:记录该行内用来定位的关键字信息 -->     <!-- anchorType="2" 右-->			            
           
            <vecLineKeyWord>  <!--定义关键字基准点 “号”等字的右边界为 4号基准点-->
                     
              <CKeyWord nMinWidth="-1" nMaxHeight="-1" content="号" nMinHeight="-1" nConfirmType="1" nMaxWidth="-1">
                <vecCLocateAnchor>
                  <!--<CLocateAnchor nDisToAnchor="220" nAnchorIndex="4" anchorType="2" /> -->
                  
                  <CLocateAnchor nDisToAnchor="220" nAnchorIndex="4" anchorType="2" /> 

                  <!--//定义关键字“码”右边界为 4号基准点????-->

                </vecCLocateAnchor>
              </CKeyWord>
              
              <CKeyWord nMinWidth="-1" nMaxHeight="-1" content="险" nMinHeight="-1" nConfirmType="1" nMaxWidth="-1">
                <vecCLocateAnchor>
                  <CLocateAnchor nDisToAnchor="596" nAnchorIndex="4" anchorType="2" />
                </vecCLocateAnchor>
              </CKeyWord>
              
              <CKeyWord nMinWidth="-1" nMaxHeight="-1" content="保" nMinHeight="-1" nConfirmType="1" nMaxWidth="-1">
                <vecCLocateAnchor>
                  <CLocateAnchor nDisToAnchor="1328" nAnchorIndex="4" anchorType="2" />
                </vecCLocateAnchor>
              </CKeyWord>              
                            
            </vecLineKeyWord>
            
            <vecCLocateAnchor>
              <CLocateAnchor nDisToAnchor="0" nAnchorIndex="3" anchorType="3" />  
                <!-- // 保险号行定义上基准-->
                
            </vecCLocateAnchor>
            
          </CLine>
          
         
		 
         <CLine nIndex="1" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">    <!--//身份证行-->	
          
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->						
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            
            <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="\S{3}\D{17}[\DX]" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
         
             
              <!--nLocateMethod:  0,用识别核心做定位;
								  1，提取连通域的方法进行定位;
								  2，投影方法进行定位
						-->
              <!--bHeight:是否等高-->
              <!--bSpace:是否等间距-->
              <!--bWidth:是否等宽-->
              
              <!--nMinElementNum:该行最少元素数-->
              <!--nMaxElementNum:该行最多元素数-->
              
              <!--nMinWidth:元素的最小宽度-->
              <!--nMaxWidth:元素的最大宽度-->
              <!--nMinHeight:元素的最小高度-->
              <!--nMaxHeight:元素的最大高度-->
              
              <!--nMinSpace:元素间的最小间距-->  
              <!--nMaxSpace:元素间的最大间距-->  

              <!--定位(行或者定位)字符时需要的信息 class CLocateInfo--> 
              <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="140" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="16" nMaxElementNum="-1" nMinWidth="60" nMaxWidth="500" nMinHeight="300" nMaxHeight="1000" nMinSpace="40" nMaxSpace="600" bPostProcess="1">
                
                
                 <!--nLocateMethod: //在定位字符时：0，用识别核心做定位，1，提取连通域的方法进行定位2，投影方法进行定位		-->
                <vecCLocateMethod>
                  <CLocateMethod nLocateMethod="1">
                    <vecProcessImage>
                      <CProcessImage processType="1">
                        <CTrueColorToGrayEx nFilter="0">
                          <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                        </CTrueColorToGrayEx>
                      </CProcessImage>
                      <CProcessImage processType="2">
                        <CGrayToBinaryEx>
                          <vecBinaryParam>
                            <BINARYPARAM nBlockNum="1" nMethod="7" />
                            <BINARYPARAM nBlockNum="1" nMethod="6" />
                          </vecBinaryParam>
                          <!--processRect-->
                          <RECT Left="0" Top="0" Right="0" Bottom="0" />
                        </CGrayToBinaryEx>
                      </CProcessImage>
                    </vecProcessImage>
                  </CLocateMethod>
                  
                  <CLocateMethod nLocateMethod="1">
                    <vecProcessImage>
                      <CProcessImage processType="1">
                        <CTrueColorToGrayEx nFilter="0">
                          <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                        </CTrueColorToGrayEx>
                      </CProcessImage>
                      <CProcessImage processType="2">
                        <CGrayToBinaryEx>
                          <vecBinaryParam>
                            <BINARYPARAM nBlockNum="1" nMethod="7" />
                            <BINARYPARAM nBlockNum="1" nMethod="3" />
                          </vecBinaryParam>
                          <!--processRect-->
                          <RECT Left="0" Top="0" Right="0" Bottom="0" />
                        </CGrayToBinaryEx>
                      </CProcessImage>
                    </vecProcessImage>
                  </CLocateMethod>
                </vecCLocateMethod>
              </CLocateInfo>
         
              <vecKernal>
                <!--nRecogType:0识别区域，1识别字符-->
                <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="1" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                 <!--//识别灰度图像中的字符？？？-->
                
                 <!--// CHARTYPE{AllCHAR=0,CHCHAR=1,DIGITCHAR=2,UPPERCHAR=3,LOWCHAR=4,SPECIALCHAR=10};-->         
                  <vecCharRatio>        
                    <CCharRatio strChars="" charType="1" nWHRatio="100" />    <!--//字母？？？-->
                    <CCharRatio strChars="" charType="2" nWHRatio="62" />      <!--//数字？？？-->
                  </vecCharRatio>
                  
                </CKernalInfo>
              </vecKernal>
            </CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
            <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
            <!--cellRecogType:识别内容
								NAMECH=0,//中文姓名
								SEX=1,//性别
								NATION=2,//民族
								BIRTHDAY=3,//出生日期
								ISSUINGDATE=4,//签发日期
								VALIDPERIOD=5,//有效期至
								ADDRESSS=6,//地址
								IDNUMBER=7,//身份证号码
								PPMRZ1=8,//护照类型证件的机读码第一行
								PPMRZ2=9,//护照类型证件的机读码第二行
								OTHER=10//其他类型
						-->
            <!--charOrder:字符的排列情况，用正则表达式表示-->
            <!--kernalMainType识别核心主类型 
								THOCR=1,
								SSFT152=2,
								BARCODE=3
						-->
						
			
			 <!--定位字符的信息-->			
            <!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值 OutputThreshold的个数最大不能超过该值，否则将不输出-->
              
			
			 <!--  CRecogUnit	识别单元的信息
				   CRecogInfo	识别需要的信息-->
              <CRecogUnit nIndex="5" bLocate="1" bRecog="1">  <!--该识别单元需要定位和重新识别-->
                <CLocateRecogUnit bStart="0" nStartIndexInChar="-1" bEnd="1" nEndIndexInChar="0">
                                
                  <!-- //  用下面定义的关键字基准点（证 等字的右边界 定义识别单元左边界 4可用就不用0基准点） -->
                  <vecAnchorLocateInfo>   
					<CAnchorLocateInfo  nAnchorIndex="4" nDisToAnchor="0" anchorType="1" />  
                   <!-- <CAnchorLocateInfo  nAnchorIndex="0" nDisToAnchor="4400" anchorType="1" />-->
                    <CAnchorLocateInfo  nAnchorIndex="0" nDisToAnchor="4200" anchorType="1" />
				  
                  </vecAnchorLocateInfo>
                  
                </CLocateRecogUnit>
            
                <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="\D{17}[\DX]" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                <!--  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="18" nMaxElementNum="18" nMinWidth="60" nMaxWidth="380" nMinHeight="400" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1"> -->

  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="18" nMaxElementNum="18" nMinWidth="60" nMaxWidth="250" nMinHeight="400" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1">
                  
                 
                  
                  <!--//在定位字符时：0，用识别核心做定位，1，提取连通域的方法进行定位2，投影方法进行定位-->
                    <vecCLocateMethod>   <!--//processType="2" 中nMethod的取值不同  依次是 7 3 ；7 6 ；7 5-->
                    
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                      
                      <CLocateMethod nLocateMethod="1">                      
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="6" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="5" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                    </vecCLocateMethod>
                  </CLocateInfo>
                  
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值--> 
                    <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="3" charType="10" nWHRatio="78" />
                        <CCharRatio strChars="" charType="2" nWHRatio="78" />
                        <CCharRatio strChars="1" charType="10" nWHRatio="53" />
                        <CCharRatio strChars="X" charType="10" nWHRatio="78" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
</CRecogUnit>
            </vecRecogUnit>
            
            
            <!--vecLineKeyWord:记录该行内用来定位的关键字信息 -->     <!-- anchorType="2" 右-->			            
           
            <vecLineKeyWord>  <!--定义关键字基准点 “码”等字的右边界为 4号基准点-->               
                            
            </vecLineKeyWord>
            
            <vecCLocateAnchor>   </vecCLocateAnchor>        
                        
          </CLine>                  
		  
        </vecLine>
      </CRegion>
      
	  
      <CRegion nIndex="2" nRegionType="1" nProcessOrder="2">  <!--//姓名、性别和卡号区域-->
        <!--处理该区域需要的图像信息的光的类型-->
        <vecImageLightType>
          <!--1:可见光图;2:红外光图;4:紫外光图 -->
          <LIGHTTYPE>2</LIGHTTYPE>
          <LIGHTTYPE>1</LIGHTTYPE>
        </vecImageLightType>
        
        <!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
        <!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
        <CLocateRegion bAccurateLocate="0">
          <vecProcessImage></vecProcessImage>
          <!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
          <RECT Left="4523" Top="2572" Right="6238" Bottom="5663" />
          
          <vecAnchorLocateInfo>
            <!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
            
             <!--2016.9.8 19:20 用4号基准点定义左边界 去掉无关信息？？-->
            <!--
              <CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="-2700" anchorType="1" />-->

            <!-- <CAnchorLocateInfo nAnchorIndex="4" nDisToAnchor="50" anchorType="1" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="4431" anchorType="1" />
			-->
			
			 <CAnchorLocateInfo nAnchorIndex="4" nDisToAnchor="-150" anchorType="1" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="4231" anchorType="1" />
			
			
           <CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="-200" anchorType="2" />
             <CAnchorLocateInfo nAnchorIndex="4" nDisToAnchor="2950" anchorType="2" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7185" anchorType="2" />
			
		<!--	<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="-2720" anchorType="3" />
            <CAnchorLocateInfo nAnchorIndex="3" nDisToAnchor="-3800" anchorType="3" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2494" anchorType="3" />-->
            
            <CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="-3020" anchorType="3" />  <!--16.10.9修改-->
            <CAnchorLocateInfo nAnchorIndex="3" nDisToAnchor="-4100" anchorType="3" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2194" anchorType="3" />
			
			<!--<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="650" anchorType="4" />
            <CAnchorLocateInfo nAnchorIndex="3" nDisToAnchor="-280" anchorType="4" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="5687" anchorType="4" />-->
            
            <CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="800" anchorType="4" />
            <CAnchorLocateInfo nAnchorIndex="3" nDisToAnchor="-180" anchorType="4" />
            <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="5787" anchorType="4" />
            
          </vecAnchorLocateInfo>
          <!--该区域定义的区域类型基准点的信息-->
          <vecCLocateAnchor></vecCLocateAnchor>
          
        </CLocateRegion>
        
        <CLocateLine>
          <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="10" Top="0" Right="90" Bottom="100" />
          <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
          <!--bHeight:是否等高-->
          <!--bSpace:是否等间距-->
          <!--bWidth:是否等宽-->
          <!--nMinElementNum:该行最少元素数-->
          <!--nMaxElementNum:该行最多元素数-->
          <!--nMinWidth:元素的最小宽度-->
          <!--nMaxWidth:元素的最大宽度-->
          <!--nMinHeight:元素的最小高度-->
          <!--nMaxHeight:元素的最大高度-->
          <!--nMinSpace:元素间的最小间距-->
          <!--nMaxSpace:元素间的最大间距
  			 nNumType;//0代表定位出的元素数在nMinElementNum和nMaxElementNum之间即可，1代表定位出的元素数要么是nMaxElementNum，要么是nMinElementNum，主要是针对身份证号这种问题
	int  nMinElementNum;//最少元素数
	int  nMaxElementNum;//最多元素数-->
	
          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="3" nMaxElementNum="3" nMinWidth="300" nMaxWidth="3500" nMinHeight="300" nMaxHeight="800" nMinSpace="100" nMaxSpace="700" bPostProcess="0">  <!--  2016.9.8 nMinElementNum  为最少几行  去掉后面的两个二代证的参数 -->
            <vecCLocateMethod>
              <CLocateMethod nLocateMethod="0">
                <!--在定位前进行的预处理信息，一般是二值化-->
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              <CLocateMethod nLocateMethod="1">
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="6" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod> 
              <CLocateMethod nLocateMethod="1">
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="7">
                      <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="6" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod> 
           
            </vecCLocateMethod>
          </CLocateInfo>
          <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
          <positionPlus nLeftPlus="-120" nRightPlus="150" nTopPlus="-80" nBottomPlus="200" />
        </CLocateLine>
		
		
        <vecLine>
          <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
          <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
          <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
          <!--nLineType:0代表不需要识别，1代表需要识别-->
         
           <!--
           <CLine nIndex="1" bStartOffset="0" bEndOffset="1" bExist="0" bNeedRecog="0" nCheckKeyWord="0">
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            
       
            <vecLineKeyWord>                   
              
            </vecLineKeyWord>
      
            <vecCLocateAnchor>
            </vecCLocateAnchor>
          </CLine>
-->
          
           		  
          
          <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="1" nCheckKeyWord="0">  <!--//姓名行占两行  2016.9.8 18:00 改为1行 ..建议排除少数民族行简单化处理-->  
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            
            <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="70" nMaxPointHeight="50" bMatchRegExp="0" charOrder="\S{1,-1}(.\S{1,-1})?" bConfirmParams="0" nProcessOrder="0" nKernelType="0">

                  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="1" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="-1" nMinWidth="180" nMaxWidth="600" nMinHeight="10" nMaxHeight="850" nMinSpace="20" nMaxSpace="800" bPostProcess="1">
                    <vecCLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="6" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                    </vecCLocateMethod>
                  </CLocateInfo>
                  
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="1" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="" charType="1" nWHRatio="100" />
                        <CCharRatio strChars="一" charType="10" nWHRatio="300" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
            <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
            <!--cellRecogType:识别内容
								NAMECH=0,//中文姓名
								SEX=1,//性别
								NATION=2,//民族
								BIRTHDAY=3,//出生日期
								ISSUINGDATE=4,//签发日期
								VALIDPERIOD=5,//有效期至
								ADDRESSS=6,//地址
								IDNUMBER=7,//身份证号码
								PPMRZ1=8,//护照类型证件的机读码第一行
								PPMRZ2=9,//护照类型证件的机读码第二行
								OTHER=10//其他类型
						-->
            <!--charOrder:字符的排列情况，用正则表达式表示-->
            <!--kernalMainType识别核心主类型 
								TH_OCR=1,
								SSFT152=2,
								BARCODE=3
						-->
           
                <!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
              <CRecogUnit nIndex="1" bLocate="0" bRecog="0">
                <CLocateRecogUnit bStart="1" nStartIndexInChar="-1" bEnd="1" nEndIndexInChar="0">
                  <vecAnchorLocateInfo>                                   
                    
					
					     <!--姓名右边界无法确定 
                        <CAnchorLocateInfo nAnchorIndex="4" nDisToAnchor="3100" anchorType="2" />
                    <CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="7300" anchorType="2" />
                    -->            
                   
                  </vecAnchorLocateInfo>
                </CLocateRecogUnit>
                
          
              <vecRecogInfo/>
</CRecogUnit>
            </vecRecogUnit>
            
            <!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
            <vecLineKeyWord>                   
              
            </vecLineKeyWord>
            
            <!--vecCLocateAnchor:记录该行定义基准点的信息-->
            <vecCLocateAnchor>
            </vecCLocateAnchor>
            
          </CLine>
         
                
        
         
         <CLine nIndex="1" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="1" nCheckKeyWord="0">   <!--//性别行--> 
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="[男女]" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                        
            <!--      <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="200" nMaxWidth="460" nMinHeight="400" nMaxHeight="680" nMinSpace="0" nMaxSpace="0" bPostProcess="1">-->
            
                  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="300" nMaxWidth="650" nMinHeight="400" nMaxHeight="850" nMinSpace="0" nMaxSpace="0" bPostProcess="1">
                  
                    <vecCLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                    </vecCLocateMethod>
                  </CLocateInfo>
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="1" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="" charType="1" nWHRatio="100" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
            <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
            <!--cellRecogType:识别内容
							NAMECH=0,//中文姓名
							SEX=1,//性别
							NATION=2,//民族
							BIRTHDAY=3,//出生日期
							ISSUINGDATE=4,//签发日期
							VALIDPERIOD=5,//有效期至
							ADDRESSS=6,//地址
							IDNUMBER=7,//身份证号码



							PPMRZ1=8,//护照类型证件的机读码第一行




							PPMRZ2=9,//护照类型证件的机读码第二行


							OTHER=10//其他类型
						-->
            <!--charOrder:字符的排列情况，用正则表达式表示-->
            <!--kernalMainType识别核心主类型 
								TH_OCR=1,
								SSFT152=2,
								BARCODE=3
						-->
                        <!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
              <CRecogUnit nIndex="2" bLocate="0" bRecog="0">
                <CLocateRecogUnit bStart="1" nStartIndexInChar="-1" bEnd="1" nEndIndexInChar="-1">
                  <vecAnchorLocateInfo>
                   
                  </vecAnchorLocateInfo>
                </CLocateRecogUnit>
                
 
                      
                

              <vecRecogInfo/>
</CRecogUnit>
            </vecRecogUnit>
            
            <!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
            <vecLineKeyWord>
                                     
            </vecLineKeyWord>
			
            <!--vecCLocateAnchor:记录该行定义基准点的信息-->
            <vecCLocateAnchor>      
            </vecCLocateAnchor>
          </CLine>
         
		 
       
		<!--<CLine nIndex="2" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="1" nCheckKeyWord="0">  --><!--//卡号行--><!-- --> 
		
		<CLine nIndex="2" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">  <!--//卡号行 16.10.9修改-->  
          
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->						
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            
            <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="\C{1}\D{8}" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                     
              <!--    <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="9" nMaxElementNum="9" nMinWidth="60" nMaxWidth="380" nMinHeight="400" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1">-->
              <!--
                          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="9" nMaxElementNum="9" nMinWidth="60" nMaxWidth="380" nMinHeight="460" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1">-->
                          
                           <CLocateInfo bEraseStart="0" nMinWHRatio="40" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="-1" nMinWidth="60" nMaxWidth="250" nMinHeight="460" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1">
                  
                  <!--//在定位字符时：0，用识别核心做定位，1，提取连通域的方法进行定位2，投影方法进行定位-->
                    <vecCLocateMethod>   <!--//processType="2" 中nMethod的取值不同  依次是 7 3 ；7 6 ；7 5-->
                    
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                      
                      <CLocateMethod nLocateMethod="1">                      
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="6" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="5" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                    </vecCLocateMethod>
                  </CLocateInfo>
                  
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="11" nFilterType="3" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                      
                       <!-- 2016.9.12注释
<CCharRatio strChars="" charType="2" nWHRatio="78" />
-->
                        
                        <CCharRatio strChars="1" charType="10" nWHRatio="53" />
                        <CCharRatio strChars="" charType="3" nWHRatio="78" />
          
          
						<CCharRatio strChars="I" charType="10" nWHRatio="53" />
           
                       </vecCharRatio>
                    </CKernalInfo>
                    
                    
                    <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                      <!--
                        <CCharRatio strChars="1" charType="10" nWHRatio="53" />-->
                        <CCharRatio strChars="3" charType="10" nWHRatio="78" />
                        <CCharRatio strChars="" charType="2" nWHRatio="78" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
</vecRecogInfo>
<!--nRecogType:0识别区域，1识别字符-->
            <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
            <!--cellRecogType:识别内容
								NAMECH=0,//中文姓名
								SEX=1,//性别
								NATION=2,//民族
								BIRTHDAY=3,//出生日期
								ISSUINGDATE=4,//签发日期
								VALIDPERIOD=5,//有效期至
								ADDRESSS=6,//地址
								IDNUMBER=7,//身份证号码
								PPMRZ1=8,//护照类型证件的机读码第一行
								PPMRZ2=9,//护照类型证件的机读码第二行
								OTHER=10//其他类型
						-->
            <!--charOrder:字符的排列情况，用正则表达式表示-->
            <!--kernalMainType识别核心主类型 
								THOCR=1,
								SSFT152=2,
								BARCODE=3
						-->
						
			
			 <!--定位字符的信息 2016.9.12 卡号第一位为大写字母 不能写死成字母D-->	
			 		
                 <!-- <CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="\C{1}\D{8}" bConfirmParams="0">-->
                  
                     <!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellNameEng="" cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值 OutputThreshold的个数最大不能超过该值，否则将不输出-->
              
			
			 <!--  CRecogUnit	识别单元的信息
				   CRecogInfo	识别需要的信息-->
				   
             <!-- <CRecogUnit nIndex="3" bLocate="0" bRecog="0">  --><!--该识别单元需要定位和重新识别-->
              
              <CRecogUnit nIndex="3" bLocate="1" bRecog="1">  <!--该识别单元需要定位和重新识别-->
              
                <CLocateRecogUnit bStart="0" nStartIndexInChar="-1" bEnd="1" nEndIndexInChar="0">
                                
                  <!-- //  用下面定义的关键字基准点（证 等字的右边界 定义识别单元左边界 4可用就不用0基准点） -->
                  <!--<vecAnchorLocateInfo>
                  
					
                  </vecAnchorLocateInfo> 
                   2016.109修改
                  -->
                  
                  <vecAnchorLocateInfo>   
					<CAnchorLocateInfo  nAnchorIndex="4" nDisToAnchor="0" anchorType="1" />  
                   <!-- <CAnchorLocateInfo  nAnchorIndex="0" nDisToAnchor="4400" anchorType="1" />-->
			<!--	  4400的时候 210图像全正确-->
				   <CAnchorLocateInfo  nAnchorIndex="0" nDisToAnchor="4300" anchorType="1" />
                  </vecAnchorLocateInfo>
                  
                </CLocateRecogUnit>
                
                <vecRecogInfo>
<CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="\C{1}\D{8}" bConfirmParams="0" nProcessOrder="0" nKernelType="0">
                     
              <!--    <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="9" nMaxElementNum="9" nMinWidth="60" nMaxWidth="380" nMinHeight="400" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1">-->
              
                          <CLocateInfo bEraseStart="0" nMinWHRatio="30" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="-1" nMinWidth="10" nMaxWidth="250" nMinHeight="350" nMaxHeight="850" nMinSpace="0" nMaxSpace="230" bPostProcess="1">
                  
                  <!--//在定位字符时：0，用识别核心做定位，1，提取连通域的方法进行定位2，投影方法进行定位-->
                    <vecCLocateMethod>   <!--//processType="2" 中nMethod的取值不同  依次是 7 3 ；7 6 ；7 5-->
                    
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                      
                      <CLocateMethod nLocateMethod="1">                      
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="6" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                        
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam>
                                <BINARYPARAM nBlockNum="1" nMethod="7" />
                                <BINARYPARAM nBlockNum="1" nMethod="5" />
                              </vecBinaryParam>
                              
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                      
                    </vecCLocateMethod>
                  </CLocateInfo>
                  
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="11" nFilterType="3" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                      
                       <!-- 2016.9.12注释
<CCharRatio strChars="" charType="2" nWHRatio="78" />
-->
                        
                        <CCharRatio strChars="1" charType="10" nWHRatio="53" />
                        <CCharRatio strChars="" charType="3" nWHRatio="78" />
          
          
						<CCharRatio strChars="I" charType="10" nWHRatio="53" />
						
						<CCharRatio strChars="" charType="2" nWHRatio="78" />
           
                       </vecCharRatio>
                    </CKernalInfo>
                    
                    
                    <!--<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                      --><!--
                        <CCharRatio strChars="1" charType="10" nWHRatio="53" />--><!--
                        <CCharRatio strChars="3" charType="10" nWHRatio="78" />
                        <CCharRatio strChars="" charType="2" nWHRatio="78" />
                      </vecCharRatio>
                    </CKernalInfo>  -->
                  </vecKernal>  
                </CRecogInfo>
</vecRecogInfo>
<!--
                2016.10.9插入下部分的定位和识别-->
                
              </CRecogUnit>
            </vecRecogUnit>
            
            
            <!--vecLineKeyWord:记录该行内用来定位的关键字信息 -->     <!-- anchorType="2" 右-->			            
           
            <vecLineKeyWord>  <!--定义关键字基准点 的右边界为 4号基准点-->           
            </vecLineKeyWord>
            
            <vecCLocateAnchor>  
			</vecCLocateAnchor>        
                        
          </CLine>                  
		  
         
         
        </vecLine>
      </CRegion>

    </vecRegion>
    
    
      <!--从识别单元中获取导出单元的内容   ？？？
    int nIndex;//输出结果序号
	TStringW deriveResult;//输出内容
	RECT rcResult;
	int nSrcRecogUnitIndex;//可以导出该单元结果的识别单元的索引值
	int nStartCharIndex;
	int nEndCharIndex;
	vector<CFlagFind> vecFlagFind; //当不能直接得到字符位置时，通过标识符来查找
-->
    
    
    <!--vecCLocateAnchor:该证件的所有的基准点的信息-->
    <!--anchorType:基准点类型，取值如下

			ZEROANCHOR=0,//(0,0)基准
			LEFT=1,//左边
			RIGHT=2,//右边
			TOP=3,//上边
			BOTTOM=4,//下边
		-->
    <vecAnchor>
	
      <!--0基准点-->
      <CAnchor nIndex="0" anchorType="0" anchorPos="0" bEnable="0" nMinPos="-1" nMaxPos="-1" />
	  
      <!--头像区域定义左基准-->
      <CAnchor nIndex="1" anchorPos="-1" anchorType="1" bEnable="0" nMinPos="-1" nMaxPos="-1" />
      <!--头像区域定义下基准-->	  
      <CAnchor nIndex="2" anchorPos="-1" anchorType="4" bEnable="0" nMinPos="-1" nMaxPos="-1" />
	  
      <!--保险号行定义上基准-->
      <CAnchor nIndex="3" anchorPos="-1" anchorType="3" bEnable="0" nMinPos="-1" nMaxPos="-1" />
      <!--保险号关键字定义右基准-->	  
      <CAnchor nIndex="4" anchorPos="-1" anchorType="2" bEnable="0" nMinPos="-1" nMaxPos="-1" />
    
	</vecAnchor>
	
	<!--vecDeriveUnit>
      <CDeriveUnit nEndCharIndex="18" nSrcRecogUnitIndex="5" nIndex="1" nStartCharIndex="16" />  
    </vecDeriveUnit>
	-->
  <!--
    int nIndex;//输出结果序号
	RECOGTYPE cellRecogType;//识别内容
	RECT rcResult;//输出字段位置
	TString cellNameEng="" cellName;//输出字段名称
	TStringW outResult;//输出结果的内容
	bool bOutput;
	int nOutputThreshold;//输出界限一，待输出的识别结果的字频的值不能低于该值
	int nOutputNumber;//输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出
	bool bFormatResult;//输出结果格式化
	bool bMainField;//是否主要字段
-->   
    <vecOutPutResult>
      <COutPutResult nIndex="0" cellRecogType="20" cellNameEng="Reserve" cellName="保留" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
      
      <COutPutResult nIndex="1" cellRecogType="0" cellNameEng="Name" cellName="姓名" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" bMainField="1" nRejectThresh="20"/>
	  
	   <COutPutResult nIndex="2" cellRecogType="1" cellNameEng="Sex" cellName="性别" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
	   
	   <COutPutResult nIndex="3" cellRecogType="10" cellNameEng="Card number" cellName="卡号" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0"  />
	  	   	  
       <COutPutResult nIndex="4" cellRecogType="7" cellNameEng="Social security number" cellName="保险号" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" bMainField="1" nRejectThresh="30"/>
	  
      <COutPutResult nIndex="5" cellRecogType="7" cellNameEng="ID number" cellName="身份证" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" bMainField="1" nRejectThresh="30"/>
    </vecOutPutResult>
    
  <!-- <vecMergeUnit>
    <CMergeUnit nDestUnitIndex="2" nDestUnitType="4" nSrcUnitIndex="6" nSrcUnitType="4" strSrc="0" strDest="" nProcessPos="-1" bMeet="1" bSynchronous="0" nOperateType="23"/>
	
    --><!--<CMergeUnit nDestUnitIndex="5" nDestUnitType="4" nSrcUnitIndex="6" nSrcUnitType="4" strSrc="0" strDest="" nProcessPos="-1" bMeet="1" bSynchronous="0" nOperateType="30"/>--><!--
    
     --><!-- UNIT_OPERATE_TYPE_ID_CHECK_ADDRESS=0x1e,//20151014 用身份证号来校验地址  nOperateType="30" 30即二进制的0xle   识别输出整合处理 属于后处理部分 不同证件不一定都有   --><!--

    </vecMergeUnit>-->
    
  </CIDCardTemplate>
</IDCARD>